@url-path-prefix: 'https://raw.githubusercontent.com/meewill/SF/main';
@url-path-prefix: 'https://cdn.jsdelivr.net/gh/meewill/SF';

@allWeights: {
  Thin: 200;
  Light: 300;
  Regular: 400;
  Medium: 500;
  Semibold: 600;
  Bold: 700;
  Heavy: 800;
  Black: 900;
}

@monoWeights: {
  Thin: 200;
  Light: 300;
  Medium: 400;
  Medium: 500;
  Semibold: 600;
  Bold: 700;
  Heavy: 800;
}

@formats: {
  @ttf: TrueType;
  @otf: OpenType;
  @woff: woff;
  @woff2: woff2;
}

.load-fonts-for(@families, @tar, @weights, @unicode, @local: false) {
  each(@families, .(@family) {
    each(@weights, .(@numeric, @weight-key) {
      each({
        normal: '';
        italic: 'Italic';
      }, .(@style-val, @style-key) {
        // @keyword: extract(@weight, 1);
        // @numeric: extract(@weight, 2);
        @font-face {
          font-family: @family;
          .use-src(@family, @tar, @weight-key, @style-val, @numeric, @style-key, @local);
          unicode-range: @unicode;
          font-weight: @numeric;
          font-style: @style-key;
          font-display: swap;
        }
      })
    })
  })
}

.use-src(@family, @tar, @weight-key, @style-val, @numeric, @style-key, @local) {
  @nam: @tar[nam];
  @dir: @tar[dir];
  @ext: @tar[ext];
  @format: @formats[@@ext];
  @italic: if(@style-val='', e(''), ' Italic');
  src: if(@local, local('@{nam} @{weight-key}@{italic}') e(','),) url('@{url-path-prefix}@{dir}@{weight-key}@{style-val}.@{ext}') format('@{format}');
}

.load-local-fonts-for(@families, @tar, @weights, @unicode, @local: false) {
  each(@families, .(@family) {
    @font-face {
      font-family: @family;
      src: local(@family);
      unicode-range: @unicode;
      font-display: swap;
    }
  })
}

.load-stretch-fonts-for(@families, @tar, @weights, @unicode, @local: false) {
  each(@families, .(@family) {
    each(@weights, .(@numeric, @weight-key) {
      @font-face {
        font-family: @family;
        .use-stretch-src(@family, @tar, @weight-key, '', @numeric, '', @local);
        unicode-range: @unicode;
        font-weight: @numeric;
        font-stretch: condensed;
        font-display: swap;
      }
    })
  })
}

.use-stretch-src(@family, @tar, @weight-key, @style-val, @numeric, @style-key, @local) {
  @nam: @tar[nam];
  @dir: @tar[dir];
  @ext: @tar[ext];
  @format: @formats[@@ext];
  src: if(@local, local('@{nam} Condensed @{weight-key}') e(','),) url('@{url-path-prefix}@{dir}.@{ext}') format('@{format}');
}

@generalUnicode: e('U+0000-024F'),
e('U+02B0-052F'),
e('U+1DC0-20CF'),
e('U+2190-22FF'),
e('U+2460-24FF'),
e('U+25A0-25FF'),
e('U+2700-27FF'),
e('U+2900-2BFF'),
e('U+2C60-2C7F'),
e('U+2DE0-2E7F'),
e('U+3200-32FF'),
e('U+A640-A69F'),
e('U+A700-A7FF'),
e('U+E000-F8FF'),
e('U+FFF0-FFFF'),
e('U+F0000-10FFFF');
@plusUnicode: e('U+0250-02AF'),
e('U+1D00-1DBF'),
e('U+2190-22FF');
@allUnicode: @generalUnicode, @plusUnicode;

@zhUnicode: e('U+4E00-9FFF'),
e('U+3400-4DBF'),
e('U+20000-2A6DF'),
e('U+F900-FAFF'),
e('U+2F800-2FA1F');
// e('U+2A700–2B73F, U+2B740–2B81F, U+2B820–2CEAF'),
